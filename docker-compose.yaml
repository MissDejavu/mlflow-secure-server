version: '3.7'

services:
  minio:  
    restart: on-failure
    image: quay.io/minio/minio:RELEASE.2022-01-08T03-11-54Z
    command: server /data --console-address :9101 --address :9100
    ports:
      - "9100:9100"
      - "9101:9101"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9100/minio/health/live"]
      interval: 5m
      timeout: 20s
      retries: 3
    hostname: minio
    volumes:
      - ${MINIO_DIR}:/data

  db:
    restart: on-failure
    image: postgres
    container_name: mlflow_db
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: mlflow
    volumes:
      - ${DATABASE_DIR}:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  mlflowserver:
    restart: on-failure
    image: mlflow_server
    container_name: mlflow_server
    build: ./mlflow
    environment: 
      MLFLOW_S3_ENDPOINT_URL: http://${MINIO_HOST}:9100
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    expose: 
      - "5000"
    command: mlflow server -h 0.0.0.0 --port 5000 
            --backend-store-uri postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/mlflow 
            --default-artifact-root S3://mlflow
    depends_on: 
      - db
      - minio

  nginx:
    restart: on-failure
    build: ./nginx
    image: mlflow_nginx
    container_name: mlflow_nginx
    environment: 
      MLFLOW_TRACKING_USERNAME: ${MLFLOW_TRACKING_USERNAME}
      MLFLOW_TRACKING_PASSWORD: ${MLFLOW_TRACKING_PASSWORD}
    ports:
        - "5000:80"
    depends_on:
        - mlflowserver

        